{"version":3,"file":"static/js/556.4749666f.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/ContactsFilter.module.css?ffe0","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","pages/Contacts.js","webpack://react-homework-template/./src/components/App.module.css?6c4d","webpack://react-homework-template/./src/components/ContactsForm/ContactForm.module.css?78ec"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport TextField from '@mui/material/TextField';\n\nimport React from 'react';\nimport { useGetContactsQuery, useAddContactMutation } from 'redux/auth/contactsApi';\nimport { toast } from 'react-toastify';\nimport style from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const id = nanoid();\n\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const addNewContact = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.name.value;\n    const number = form.number.value;\n    const normalizedName = name.toLowerCase();\n    let nameOntheList = false;\n\n    const newContact = {\n      id: nanoid(),\n      name: name,\n      number: number,\n    };\n\n    data.forEach(contact => {\n      if (contact.name.toLowerCase() === normalizedName) {\n        toast.info(`${contact.name} is already in contacts`, {\n  icon: \"🦄\",  theme: \"dark\"\n});\n        nameOntheList = true;\n        \n      }\n    });\n\n    if (nameOntheList) return;\n\n    addContact(newContact);\n    form.reset();\n  };\n\n  return (\n    <form className={style.form} onSubmit={addNewContact}>\n      <label htmlFor={id} className={style.formText}></label>\n      \n      <TextField\n        className={style.formInput}\n        label=\"Name\"\n        id={id}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        color=\"secondary\" \n      />\n      <label htmlFor={id} className={style.formText}></label>\n      <TextField\n        className={style.formInput}\n        label=\"Phone Number\"\n        id={id}\n        required\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n       color=\"secondary\" \n      />\n      <button className={style.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"ContactsFilter_filterInput__Zt0WL\"};","import style from './ContactsFilter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport debounce from 'debounce';\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = () => {\n    \n  const dispatch = useDispatch();\n\n  const onChange = debounce(e => {\n  const value = e.target.value.toLowerCase();\n\n  dispatch(setFilter(value));\n    \n  },1000);\n\n\n  return (\n    <label className={style.filterLabel}>\n      Find contact by name\n      <TextField className={style.filterInput}\n        type=\"name\"\n        label=\"Search\"\n        id=\"demo-helper-text-misaligned\"\n        color=\"secondary\" \n        onChange={onChange} />\n    </label>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\",\"wrapper\":\"ContactsList_wrapper__zyXOO\",\"contactsItem\":\"ContactsList_contactsItem__b2nHv\",\"contactBtn\":\"ContactsList_contactBtn__-JsBt\",\"contactsName\":\"ContactsList_contactsName__aMNYv\",\"contactImage\":\"ContactsList_contactImage__i3NHx\"};","import PropTypes from 'prop-types';\nimport style from './ContactsList.module.css';\nimport { getFilterValue } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from 'redux/auth/contactsApi';\nimport Loader from 'components/Loader/Loader';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\n\nexport const ContactList = () => {\n  const { data, isLoading } = useGetContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n\n  const filterValue = useSelector(getFilterValue);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (!data) {\n    return <div>No contacts</div>;\n  }\n\n  const contactsFilter = data.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  return (\n    <ul className={style.contactsList}>\n      {contactsFilter.map(({ id, name, number }) => (\n        <li key={id} className={style.contactsItem}>\n          <div className={style.wrapper}>\n            <span className={style.contactsName}>{`${name}`}</span>\n            <span className={style.contactsPhone}>{`${number}`}</span>\n            <IconButton\n              disabled={isLoading}\n              onClick={() => deleteContact(id)}\n              edge=\"end\"\n              aria-label=\"delete\"\n            >\n              <DeleteIcon />\n            </IconButton>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};","import ContactForm from 'components/ContactsForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport style from '../components/App.module.css';\nimport { useGetContactsQuery } from '../redux/auth/contactsApi';\nimport Loader from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const { data: isLoggedIn, isLoading, isError, error } = useGetContactsQuery();\n\n  let content;\n\n  if (isLoading) {\n    content = <Loader />;\n  } else if (isLoggedIn) {\n    content = (\n      <div className={style.container}>\n        <h1>Phonebook</h1>\n        <div className={style.wrapper}>\n          <ContactForm />\n          <Filter />\n        </div>\n        <ContactList />\n      </div>\n    );\n  } else if (isError) {\n    content = <p>{JSON.stringify(error)}</p>;\n  }\n  return content;\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__ZdBeZ\",\"wrapper\":\"App_wrapper__oLZUe\",\"link\":\"App_link__91nmW\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__Vl2ry\",\"formText\":\"ContactForm_formText__oCm0h\",\"formInput\":\"ContactForm_formInput__rWJ-7\",\"formBtn\":\"ContactForm_formBtn__kX9+A\"};"],"names":["id","nanoid","data","useGetContactsQuery","useAddContactMutation","addContact","className","style","onSubmit","e","preventDefault","form","currentTarget","name","value","number","normalizedName","toLowerCase","nameOntheList","newContact","forEach","contact","toast","icon","theme","reset","htmlFor","TextField","label","type","pattern","title","required","color","Filter","dispatch","useDispatch","onChange","debounce","target","setFilter","ContactList","isLoading","useDeleteContactMutation","deleteContact","filterValue","useSelector","getFilterValue","Loader","contactsFilter","filter","includes","map","IconButton","disabled","onClick","edge","Delete","content","isLoggedIn","isError","error","JSON","stringify"],"sourceRoot":""}